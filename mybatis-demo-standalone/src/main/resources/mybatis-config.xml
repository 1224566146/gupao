<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <properties resource="db.properties"></properties>
    <settings>
        <!-- 打印查询语句 -->
        <setting name="logImpl" value="STDOUT_LOGGING"/>

        <!-- 控制全局缓存（二级缓存），默认true -->
        <setting name="cacheEnabled" value="false" />

        <!-- 延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。默认false -->
        <setting name="lazyLoadingEnabled" value="true" />
        <!-- 当开启时，任何方法的调用都会加载该对象的所有属性。默认 false，可通过select标签的 fetchType来覆盖-->
        <setting name="aggressiveLazyLoading" value="false" />
        <!-- Mybatis 创建具有延迟加载能力的对象所用到的代理工具，默认JavaSSIST -->
        <!--<setting name="proxyFactory" value="CGLIB" />-->
        <!--STATEMENT级别的缓存，使一级缓存，只针对当前执行的这一statement有效-->
        <!--<setting name="localCacheScope" value="STATEMENT" />-->
        <setting name="localCacheScope" value="SESSION" />
    </settings>

    <typeAliases>
        <typeAlias type="com.fan.gupao.demo.domain.Blog" alias="blog"/>
    </typeAliases>

    <!--<typeHandlers>-->
        <!--<typeHandler handler="com.fan.gupao.demo.type.MyTypeHandler" />-->
    <!--</typeHandlers>-->

    <!--<objectFactory type="com.fan.gupao.demo.objectfactory.GPObjectFactory">-->
        <!--<property name="gupao" value="666"/>-->
    <!--</objectFactory>-->

    <!--<plugins>-->
        <!--<plugin interceptor="com.fan.gupao.demo.interceptor.SQLInterceptor">-->
            <!--<property name="gupao" value="betterme" />-->
        <!--</plugin>-->
        <!--<plugin interceptor="com.fan.gupao.demo.interceptor.MyPageInterceptor">-->
        <!--</plugin>-->
    <!--</plugins>-->

    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"></transactionManager> <!-- 单独使用时配置成MANAGED没有事务 -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}" />
                <property name="url" value="${jdbc.url}" />
                <property name="username" value="${jdbc.username}" />
                <property name="password" value="${jdbc.password}" />

            </dataSource>
        </environment>
    </environments>

    <mappers>
        <mapper resource="BlogMapper.xml" />
        <mapper resource="BlogMapperExt.xml" />
    </mappers>

</configuration>